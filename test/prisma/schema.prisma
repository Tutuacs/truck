// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  name          String?
  email         String?
  cpf           String?
  profile       Profile?
  company       Boolean  @default(false)
  cnpj          String?
  verifiedEmail Boolean  @default(false)
  trucksId      String[] @db.ObjectId
  Trucks        Truck[]  @relation(fields: [trucksId], references: [id])
  Cart          Cart?
}

model Profile {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  email    String  @unique
  password String
  role     Int     @default(1)
  image    String?
  User     User?   @relation(fields: [userId], references: [id])
  userId   String  @unique @db.ObjectId
}

model Cart {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  Product   Product[] @relation(fields: [productId], references: [id])
  productId String[]  @db.ObjectId
  User      User?     @relation(fields: [userId], references: [id])
  userId    String?   @unique @db.ObjectId
  Shop      Shop?
  Combo     Combo[]   @relation(fields: [comboId], references: [id])
  comboId   String[]  @db.ObjectId
}

model Shop {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  Product   Product[] @relation(fields: [productId], references: [id])
  productId String[]  @db.ObjectId
  Combo     Combo[]   @relation(fields: [comboId], references: [id])
  comboId   String[]  @db.ObjectId
  Cart      Cart?     @relation(fields: [cartId], references: [id])
  cartId    String?   @unique @db.ObjectId
}

model Truck {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  image      String?
  pound      Int       @default(0)
  brand      String
  modelImage String?
  year       String?
  capacity   String?
  engine     String?
  User       User[]    @relation(fields: [userId], references: [id])
  userId     String[]  @db.ObjectId
  Product    Product[] @relation(fields: [productId], references: [id])
  productId  String[]  @db.ObjectId
}

model Product {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  name           String
  description    String?
  price          Float
  Brands         Brands?   @relation(fields: [brandsId], references: [id])
  brandsId       String?   @db.ObjectId
  Truck          Truck[]   @relation(fields: [truckId], references: [id])
  truckId        String[]  @db.ObjectId
  promotion      Boolean?  @default(false)
  promotionFrom  DateTime?
  promotionTo    DateTime?
  promotionPrice Float?
  minPromotion   Int?      @default(1)
  comboId        String?   @db.ObjectId
  minCombo       Int?      @default(1)
  Combo          Combo?    @relation(fields: [comboId], references: [id])
  Cart           Cart[]    @relation(fields: [cartId], references: [id])
  cartId         String[]  @db.ObjectId
  Shop           Shop[]    @relation(fields: [shopId], references: [id])
  shopId         String[]  @db.ObjectId
}

model Combo {
  id      String    @id @default(auto()) @map("_id") @db.ObjectId
  Product Product[]
  Cart    Cart[]    @relation(fields: [cartId], references: [id])
  cartId  String[]  @db.ObjectId
  Shop    Shop[]    @relation(fields: [shopId], references: [id])
  shopId  String[]  @db.ObjectId
}

model Brands {
  id      String    @id @default(auto()) @map("_id") @db.ObjectId
  name    String?
  product Product[]
}
