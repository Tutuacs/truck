// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id            String      @id @default(auto()) @map("_id") @db.ObjectId
  name          String?
  email         String?
  cpf           String?
  profile       Profile?
  company       Boolean     @default(false)
  cnpj          String?
  verifiedEmail Boolean     @default(false)
  userTrucksId  String[]    @db.ObjectId
  userTrucks    UserTruck[] @relation(fields: [userTrucksId], references: [id])
}

model Profile {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  email    String  @unique
  password String
  role     Int     @default(1)
  image    String?
  User     User?   @relation(fields: [userId], references: [id])
  userId   String  @unique @db.ObjectId
}

model Truck {
  id         String      @id @default(auto()) @map("_id") @db.ObjectId
  image      String?
  pound      Int         @default(1)
  brand      String
  product    Product[]
  Model      Model[]     @relation(fields: [modelId], references: [id])
  modelId    String[]    @db.ObjectId
  UserTruck  UserTruck[]
}

model Model {
  id         String      @id @default(auto()) @map("_id") @db.ObjectId
  image      String?
  year       String
  Truck      Truck[]     @relation(fields: [truckId], references: [id])
  truckId    String[]    @db.ObjectId
  Capacity   Capacity[]  @relation(fields: [capacityId], references: [id])
  capacityId String[]    @db.ObjectId
  UserTruck  UserTruck[]
}

model Capacity {
  id        String      @id @default(auto()) @map("_id") @db.ObjectId
  capacity  String
  engine    String?
  Model     Model[]     @relation(fields: [modelId], references: [id])
  modelId   String[]    @db.ObjectId
  UserTruck UserTruck[]
}

model UserTruck {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  Truck      Truck     @relation(fields: [truckId], references: [id])
  truckId    String    @db.ObjectId
  Model      Model?    @relation(fields: [modelId], references: [id])
  modelId    String?   @db.ObjectId
  Capacity   Capacity? @relation(fields: [capacityId], references: [id])
  capacityId String?   @db.ObjectId
  User       User[]    @relation(fields: [userId], references: [id])
  userId     String[]  @db.ObjectId
}

model Product {
  id          String      @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  price       Float
  truck       Truck?      @relation(fields: [truckId], references: [id])
  truckId     String?     @db.ObjectId
  Promotion   Promotion[] @relation(fields: [promotionId], references: [id])
  promotionId String[]    @db.ObjectId
  Brands      Brands?     @relation(fields: [brandsId], references: [id])
  brandsId    String?     @db.ObjectId
}

model Promotion {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  productId String[]  @db.ObjectId
  product   Product[] @relation(fields: [productId], references: [id])
}

model Brands {
  id      String    @id @default(auto()) @map("_id") @db.ObjectId
  name    String?
  product Product[]
}
